импорт Общие
импорт Основное

@Обработчик
метод ВычислитьРазрешенияДоступа(): Массив<РазрешениеДоступа>
    возврат [ ПользователиКлиентИСервер.ПолныеПраваНаСправочникДляАутентифицированных() ]
;

@Обработчик
метод ВычислитьРазрешенияДоступаДляОбъектов(Объекты: ЧитаемыйМассив<Клиенты.ДанныеРасчетаРазрешений>): Соответствие<Клиенты.ДанныеРасчетаРазрешений, Массив<РазрешениеДоступа>>
    знч Результат = <Клиенты.ДанныеРасчетаРазрешений, Массив<РазрешениеДоступа>>{:}
    
    для Объект из Объекты
        знч Разрешения = <РазрешениеДоступа>[
            ПользователиКлиентИСервер.ПолныеПраваНаСправочникДляРуководителя(),
            новый РазрешениеДоступа(
                [новый КлючДоступаМенеджера.Объект(Владелец = Объект.Регион)],
                [Сущность.Право.Создание, Сущность.Право.Чтение, Сущность.Право.Изменение, Сущность.Право.Удаление])
        ]

        Результат.Вставить(Объект, Разрешения)
    ;

    возврат Результат
;

@ВПодсистеме
метод ПолучитьКонтактныеЛицаКлиента(Клиент: Клиенты.Ссылка): ЧитаемаяКоллекция<КонтактныеЛица.Ссылка>
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Ссылка
        ИЗ
            КонтактныеЛица
        ГДЕ
            Владелец == %Клиент
    }
    
    возврат Запрос.Выполнить().Преобразовать(Строка -> Строка.Ссылка)
;

@ВПодсистеме
метод ПолучитьСделкиКлиента(Клиент: Клиенты.Ссылка): ЧитаемаяКоллекция<Сделки.Ссылка>
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Ссылка
        ИЗ
            Сделки
        ГДЕ
            Клиент == %Клиент
    }
    
    возврат Запрос.Выполнить().Преобразовать(Строка -> Строка.Ссылка)
;

@ВПроекте
метод ПолучитьРегионыКлиентов(Клиенты: Обходимое<Клиенты.Ссылка>): ЧитаемоеСоответствие<Клиенты.Ссылка, Регионы.Ссылка?>
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Ссылка КАК Клиент,
            Регион КАК Регион
        ИЗ
            Клиенты
        ГДЕ
            Ссылка В (%Клиенты)
    }
    
    возврат Запрос.Выполнить().ВСоответствие(Строка -> Строка.Клиент, Строка -> Строка.Регион)
;