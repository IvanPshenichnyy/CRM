импорт Мероприятия
импорт Пресейл
импорт Общие::КурсыВалют

@Обработчик
метод ПослеСоздания()
    ЗаполнитьКарточки()
    
    КурсыВалютЗагружены.ПодключитьОбработчик(() -> ЗаполнитьКарточкуКурсыВалют())
    ЗаписанаЗадача.ПодключитьОбработчик(() -> ЗаполнитьКарточкуЗадачи())
    
    ЗаписанаСделка.ПодключитьОбработчик(метод(Сделка) ->
        ЗаполнитьКарточкуСделки()
        ОбновитьДиаграммы()
    ;)
    
    // Если выполняется задание заполнения демо-данными, обновим компоненты после его завершения
    если СтатусЗаданияЗаполненияДемоДанными() == СтатусЗадания.Выполняется 
        знч Уведомление = новый Уведомление("Заполнение данными", "Выполняется заполнение демонстрационными данными")
        Уведомление.ОценкаИнформации = ОценкаИнформации.Предупреждающая
        Уведомление.Показать()
        
        ПодключитьОбработчикТаймера(&ОбновитьКомпонентыПослеЗаполненияДанными, 1с, Ложь)
    ;
;

метод ЗаполнитьКарточки()
    ЗаполнитьКарточкуКурсыВалют()
    ЗаполнитьКарточкуСделки()
    ЗаполнитьКарточкуЗадачи()
;

метод ОбновитьДиаграммы()
    Компоненты.ДиаграммаВоронкаПродаж.ОбновитьДиаграмму()
    Компоненты.ДиаграммаПродажиПоНаправлениям.ОбновитьДиаграмму()
;

метод ЗаполнитьКарточкуКурсыВалют()
    Компоненты.ТаблицаВалют.Источник.Данные = КурсыВалют()
;

метод ЗаполнитьКарточкуСделки()
    знч СтатистикаСделок = СтатистикаАктивныхСделок()
    Компоненты.НадписьКоличествоСделок.Значение = СтатистикаСделок.ОбщееКоличество.Представление()
    Компоненты.НадписьСуммаСделок.Значение = "${СтатистикаСделок.ОбщаяСумма} руб."
;

метод ЗаполнитьКарточкуЗадачи()
    знч КоличествоЗадач = КоличествоОткрытыхЗадачСотрудника()
    если КоличествоЗадач != Неопределено
        Компоненты.НадписьЗадачВПроцессе.Значение = КоличествоЗадач[СтатусМероприятия.ВПроцессе].Представление()
        Компоненты.НадписьЗадачЗапланировано.Значение = КоличествоЗадач[СтатусМероприятия.Запланировано].Представление()
    ;
;

метод КарточкаПутеводительПриНажатии(Источник: Карточка, Событие: СобытиеПриНажатии)
    ПутеводительПоПроекту.Открыть()
;

метод КарточкаЗадачиПриНажатии(Источник: Карточка, Событие: СобытиеПриНажатии)
    ЗадачиФормаСписка.Открыть()
;

метод КарточкаСделкиПриНажатии(Источник: Карточка, Событие: СобытиеПриНажатии)
    СделкиФормаСписка.Открыть()
;

метод СоздатьСделкуПриНажатии(Команда: ОбычнаяКоманда)
    СделкиФормаОбъекта.ОткрытьВМодальномОкне()
;

метод ДобавитьЗадачуПриНажатии(Команда: ОбычнаяКоманда)
    ЗадачиФормаОбъекта.ОткрытьВМодальномОкне()
;

метод ЗагрузитьКурсыВалютПриНажатии(Команда: ОбычнаяКоманда)
    ФормаЗагрузкиКурсовВалют.ОткрытьВМодальномОкне()
;

@НаСервере @ДоступноСКлиента
статический метод СтатистикаАктивныхСделок(): Сделки.СтатистикаСделок
    возврат Сделки.ПолучитьСтатистикуАктивныхСделок()
;

@НаСервере @ДоступноСКлиента
статический метод КоличествоОткрытыхЗадачСотрудника(): ЧитаемоеСоответствие<СтатусМероприятия, Число>?
    знч Сотрудник = ПользователиКлиентИСервер.ПолучитьТекущегоСотрудника()
    возврат Сотрудник != Неопределено ? Задачи.КоличествоОткрытыхЗадачСотрудника(Сотрудник) : Неопределено
;

@НаСервере @ДоступноСКлиента
статический метод КурсыВалют(): Массив<КурсВалюты>
    возврат КурсыВалютСервер.ПолучитьКурсыВалют()
;

метод ОбновитьКомпонентыПослеЗаполненияДанными()
    если СтатусЗаданияЗаполненияДемоДанными() != СтатусЗадания.Выполняется 
        ОтключитьОбработчикТаймера(&ОбновитьКомпонентыПослеЗаполненияДанными)
        ЗаполнитьКарточки()
        ОбновитьДиаграммы()
        
        знч Уведомление = новый Уведомление("Заполнение данными", "Завершено заполнение демонстрационными данными")
        Уведомление.ОценкаИнформации = ОценкаИнформации.Положительная
        Уведомление.Показать()
    ;
;

@НаСервере @ДоступноСКлиента
статический метод СтатусЗаданияЗаполненияДемоДанными(): СтатусЗадания?
    знч КлючЗадания = ЗаполнениеДемоДанными.КлючЗаданияЗаполненияДанными(Пользователи.ТекущийПользователь)
    знч Задание = ЗапланированныеЗадания.ПолучитьПоКлючу(КлючЗадания)
    возврат Задание?.Статус
;