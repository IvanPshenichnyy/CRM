{
    "Демонстрационное приложение" : {
      "Общее описание" : "В приложении демонстрируются основные возможности и концепции технологии «1С:Предприятие.Элемент» на примере упрощённой CRM-системы.\n\nПроект не является законченным прикладным решением и не предназначен для автоматизации настоящих бизнес-процессов.\n\nДля того чтобы акцентировать внимание на отдельных механизмах и упростить их поиск в проекте, функции приложения, где они демонстрируются, реализованы лаконично.",
      "Функциональность" : "Демонстрационное приложение ориентировано на управление сделками и клиентами условной компании, которая предоставляет услуги по двум направлениям: «Разработка и продвижение сайтов» и «Разработка мобильных приложений». Каждая сделка компании относится к одному из этих направлений.\n\nСделка отражает процесс оказания услуги клиенту компании на каждой стадии этого процесса.\n\nСделки регистрируются в одноименном справочнике. В сделке указывается клиент, контактное лицо, содержание, сумма и валюта сделки. Курсы валют загружаются автоматически.\n\nПроцесс оказания услуги описывается набором стадий в справочнике «Стадии сделок». Каждая сделка должна находиться в одной из этих стадий, что отражается в соответствующем реквизите справочника сделки.\n\nВ разрезе сделок можно вести учёт мероприятий – задач и событий, относящихся к сделке. Задача – это запланированная на определенное время работа, которая имеет статус выполнения. События предназначены для регистрации встреч, звонков и им подобных мероприятий. В отличие от задач, события имеют дату начала и завершения.\n\nПользователю в приложении может быть назначена роль сотрудника и регион. Роли сотрудников предопределены и делятся и Менеджеров и Руководителей. Сотрудник с ролью менеджера имеет доступ к сделкам только по своему региону.\n\nСотрудник с ролью руководителя имеет доступ ко всем сделкам, может создавать новых пользователей, управлять направлениями и стадиями сделок и выполнять другие настройки.\n\nАдминистратору приложения доступен раздел «Сервис», в котором расположена консоль запросов.\n\nПри первоначальной настройке приложения и при регистрации нового пользователя в приложении оно автоматически заполняется демонстрационными данными."
    },
    "Структура проекта" : {
      "Описание и модуль проекта" : "В файле описания проекта «Проект.yaml» установлены значения его основных свойств, таких как Представление и Версия.\n\nВ модуле проекта демонстрируется использование аннотаций @НастройкаПриложения и @ОбновлениеПроекта. Методы, помеченные этими аннотациями, выполняются при первоначальной настройке и при обновлении проекта приложения соответственно.",
      "Подсистемы" : "В приложении определено 4 подсистемы: «Основное», «Общие», «Пресейл» и «Мероприятия». Элементы в них объединены по функциональному признаку. Подсистемы образуют пространства имён.\n\nДля каждого элемента подсистемы определена область видимости. Например, справочник «Общие::Направления» имеет область видимости «ВПроекте» и виден во всех подсистемах проекта, а форма «Общие::НаправленияФормаОбъекта» с областью видимости «Подсистема» видима только внутри своей подсистемы и её пакетов.",
      "Пакеты" : "В подсистеме «Общие» создан пакет «КурсыВалют», в котором сгруппированы элементы, относящиеся к загрузке, хранению и пересчету курсов валют. Пакет образует вложенное пространство имён внутри подсистемы. Для обращения к элементам пакета выполняется импорт пространства имён пакета «Общие::КурсыВалют», либо используются квалифицированные имена самих элементов: «Общие::КурсыВалют::Валюты».",
      "Ресурсы" : "Подсистемы и пакеты приложения содержат каталог «Ресурсы».\n\nСсылки на файлы изображений из каталогов ресурсов используются в компонентах интерфейса (там, где не используются стандартные иконки). Например, в панели навигации приложения навигационные команды и группы командного интерфейса содержат ссылку на двоичные данные иконки раздела.\n\nВ методе ПолучитьИконкуМероприятия() формы «Пресейл::СделкиФормаОбъекта» демонстрируется получение ссылки на ресурс с помощью литерала."
    },
    "Элементы проекта и прикладные объекты" : {
      "Справочники" : "Во всех подсистемах приложения представлены элементы вида «Справочник».\n\nДля каждого справочника определена форма объекта и форма списка, описаны права доступа.\n\nВ справочнике «Сделки» используется стандартный реквизит «Код» с автонумерацией, включающей префикс.\n\nВ справочниках «Задачи» и «События» используется стандартный реквизит «Владелец». При удалении сделки - владельца задачи или события, они также автоматически удаляются.\n\nВ модуле объекта справочника «Сделки» реализованы обработчики событий ПриЗаполнении, ПередЗаписью и ПослеЗаписи. \n\nДля справочника «Сделки» заданы параметры записи, значения которых проверяются в обработчиках события записи.",
      "Регистры сведений" : "В пакете «Общие::КурсыВалют» определен периодический регистр сведений «КурсыВалют».\n\nВ общем модуле «КурсыВалютСервер» демонстрируется добавление записей в регистр сведений (метод «ЗагрузитьКурсыВалюты()») и запрос к виртуальной таблице среза последних (метод «ПолучитьКурсВалюты()»).\n\nДля регистра установлена форма объекта (относящаяся к записи регистра) и форма списка –  «КурсыВалютФормаОбъекта» и «КурсыВалютФормаСписка», соответственно.\n\nТаблицы регистра сведений могут быть использованы в динамическом списке в качестве основных или присоединенных таблиц. Например, в форме «КурсыВалютФормаСписка» в динамическом списке выводятся данные основной таблицы регистра, а форме «ВалютыФормаСписка» к основной таблице динамического списка присоединяется виртуальная таблица «КурсыВалют.СрезПоследних».",
      "Структуры" : "Структуры «Основное::ДанныеПользователя» и «Общие::КурсыВалют::КурсВалюты» объединяют группы полей с разными типами под именем объекта структуры. Эти структуры имеют область видимости «ВПроекте» и могут использоваться во всех подсистемах.",
      "Хранимые структуры": "В подсистеме «Мероприятия» представлена хранимая структура «Участники мероприятия». Она описывает элементы множественного реквизита «Участники» справочника «Мероприятия::События».",
      "Перечисления" : "Реквизит «Приоритет» справочника «Мероприятия::Задачи» имеет тип перечисления «ПриоритетЗадачи». В модуле этого перечисления описан метод «ПолучитьЦвет()», который используется для определения цвета бейджа статуса в форме списка задач.\n\nПеречисление «Мероприятия::СтатусМероприятия» порождает тип, который используется в справочнике «Задачи». В методе ПолучитьДанныеСделок() модуля менеджера справочника Сделок демонстрируется использование значений перечисления в литерале запроса.\n\nРеквизит «Роль» справочника «Основное::Сотрудники» имеет тип перечисления «РольСотрудника». Значение этого реквизита используется в методах проверки наличия ключей доступа у пользователей.",
      "Общие модули" : "В приложении используются общие модули «Общие::КурсыВалют::КурсыВалютСервер», «Основное::ПользователиКлиентИСервер». Методы этих модулей выполняются на клиенте или на сервере в зависимости от значения свойства «Окружение» модуля и доступны в соответствии с их областью видимости через поле глобального контекста с именем модуля.",
      "Отчеты" : "На примере отчета «ОтчетОПродажах» в подсистеме «Пресейл» показана возможность встраивания отчета 1С:Аналитики в интерфейс приложения.\n\nЭтот отчет выводит данные о выигранных сделках по каждому из направлений в виде стековой диаграммы.\n\nВ качестве источника данных отчет использует виртуальную таблицу «ОтчетОПродажахТаблица».\n\nНа форму отчета выведено поле установки значения параметра «Ответственный» виртуальной таблицы и помещена команда открытия отчета в интерфейсе 1С:Аналитики.",
      "Виртуальные таблицы" : "Источником данных отчета «ОтчетОПродажах» является виртуальная таблица «ОтчетОПродажахТаблица».\n\nВиртуальная таблица имеет параметр «Ответственный», значение которого передается из Отчета.",
      "Диаграммы" : "На главной странице приложения размещены диаграммы двух типов – Воронкообразная диаграмма и Круговая диаграмма. В проекте приложения это произвольные компоненты интерфейса «ДиаграммаВоронкаПродаж» и «ДиаграммаПродажиПоНаправлениям» соответственно."
    },
    "Пользовательский интерфейс" : {
      "Командный интерфейс" : "Панель навигации демонстрационного приложения, расположенная в подсистеме «Основное» – это фрагмент командного интерфейса, в котором представлены навигационные команды, команды справочников и группы командного интерфейса.\n\nС помощью навигационных команд панели навигации открываются некоторые формы приложения (например, «СделкиФормаСписка»). \n\nУ навигационных команд открытия форм списков справочников Клиентов, Контактных лиц и других не требуется изменять значения свойств по умолчанию, поэтому для открытия этих форм используются команды автоматически порождаемого командного интерфейса: Клиенты.ОткрытьСписок.\n\nЧасть команд панели навигации демонстрационного приложения объединены в группы командного интерфейса.\n\nНавигационные команды и группы командного интерфейса на верхнем уровне панели навигации образуют разделы клиентского приложения. Для этих элементов установлены изображения, которые становятся иконками разделов.\n\nВ дополнительный командный интерфейс приложения помещена команда завершения сеанса, а в командный интерфейс панели действий – команда поиска.\n\nВ форме «Пресейл::КлиентыФормаСписка» используется команда создания. При её выполнении будет открыта форма нового объекта, соответствующего основной таблице списка. На форме команда создания располагается справа от заголовка.\n\nПрименение главной и основных команд формы показано в форме «Мероприятия::ЗадачиФормаОбъекта», где главной командой назначена команда «СохранитьИЗакрыть», а в состав основных добавлены команды «Сохранить» и «Удалить».\n\nДополнительные команды формы используются в формах «ВалютыФормаСписка» и «ЗадачиФормаСписка». На формах дополнительные команды располагаются в верхнем правом углу.",
      "Формы" : "В описаниях таких элементов проекта как Справочники определены их формы объектов и формы списков. Это компоненты интерфейса, которые наследуют тип «ФормаОбъекта» и «ФормаСписка», соответственно. Эти формы открываются при выполнении команд автоматически порождаемого командного интерфейса (таких как «ОткрытьСписок»).\n\nФормаОбъекта – это обобщенный тип. Он параметризуется типом объекта, который редактируется в форме,  и, если при закрытии формы возвращается параметр – типом этого параметра. Пример возвращения значения при закрытии формы можно увидеть в компоненте «КлиентыФормаОбъекта».\n\nДля размещения компонентов на форме «СделкиФормаОбъекта» используется «ШаблонФормыСРазделами». Этот шаблон разбивает контент формы Сделки на несколько разделов – основной раздел (слева), в котором расположены основные поля Сделки, и дополнительные разделы (в виде страниц), в которые помещена табличная часть Услуг, списки Задач и Событий. ШаблонФормыСРазделами автоматически трансформируется в мобильный форм фактор.",
      "Автоматическая группа" : "Для компоновки элементов интерфейса в приложении используются разные виды групп.\n\nВ формах «Основное::ГлавнаяСтраница» и «Мероприятия::ЗадачиФормаОбъекта» можно увидеть примеры использования Автоматической группы, предназначенной для автоматического расположения компонентов внутри своей области с выравниванием по направляющим колонкам.\n\nАвтоматическая группа адаптируется к мобильным устройствам.",
      "Поле ввода" : "Поля ввода представлены в формах объектов справочников и в других формах, например, в форме «Общие::КурсыВалют::ФормаЗагрузкиКурсовВалют».\n\nКомпонент поля ввода является обобщенным. При его описании указывается параметр типа, и в зависимости от его значения изменяется элемент управления поля ввода. Например, тип поля ввода на форме «ФормаЗагрузкиКурсовВалют» – «ЗакрытыйДиапазон», и поле ввода имеет соответствующий вид.\n\nПараметры типа полей вода, предназначенных для выбора элементов справочников, – это ссылки справочников. В поле ввода контактного лица на форме «Пресейл::ФормаСозданияСделки» и в поле ввода сделки на форме «Мероприятия::ЗадачиФормаОбъекта» демонстрируется использование свойства «НастройкиВводаСсылок» для установки отбора на список элементов справочника, доступных для выбора.\n\nДля поля ввода может быть установлено описание, как для поля ввода даты закрытия на форме «СделкиФормаОбъекта».\n\nДля поля ввода может быть установлен текст сообщения об ошибке. При нажатии кнопки «Добавить» в форме «ФормаДобавленияУчастника» проверяются значения обязательного поля и, если оно не заполнено, этому полю устанавливается соответствующее значение свойства «РезультатПроверкиДанных». При этом под полем ввода появляется сообщение «Выберите участника». Текст этого сообщения задается свойством «СообщениеОшибка» поля ввода.",
      "Таблица" : "Для вывода данных Сделок, Клиентов, Контактных лиц в формах списков этих справочников используется компонент Таблица.\n\nДля Таблицы определяется массив колонок, каждая из которых может быть либо стандартной (тип «СтандартнаяКолонкаТаблицы»), либо иметь произвольное содержимое (тип «ПроизвольнаяКолонкаТаблицы»).\n\nКолонки большинства таблиц приложения – стандартные. Стандартная колонка может быть разных видов. Например, статус задачи в форме списка Задач имеет вид значка. В ячейке стандартной колонки может выводиться изображение, как в колонке наименования таблицы Стадий сделок. Для данных типа «Сущность.Ссылка» надпись в ячейке стандартной колонки по умолчанию принимает вид гиперссылки, как в колонке «Клиент» списка Сделок. Для колонки «Направление» этого же списка вывод гиперссылки отключен.\n\nИсточником данных для Таблицы может быть как Динамический список (как в формах списков Клиентов, Контактных лиц и др.), так и Источник данных массив (как в таблице участников на форме объекта События).\n\nВ модуле формы «ЗадачиФормаСписка» демонстрируется программное создание сохраненной настройки таблицы с помощью обработчика «ПриЧтенииНастроекТаблицы». В этом примере сохраненная настройка с названием «Мои задачи» содержит фильтр по задачам текущего сотрудника. Эта настройка применяется автоматически и её также можно выбрать в меню фильтров таблицы.",
      "Стандартный список" : "На форме «Пресейл::СделкиФормаОбъекта» списки Задач и Событий выводятся с помощью стандартного списка. Для строки такого списка можно установить изображение, описание и другое стандартное наполнение.",
      "Источник данных массив" : "Источник данных списка участников в форме «Мероприятия::СобытияФормаОбъекта» имеет тип «ИсточникДанныхМассив».\n\nВ отличие от динамического списка, данные источника этого типа могут быть заполнены программно, например, с помощью произвольного запроса.",
      "Динамический список" : "Источником данных для таблиц большинства форм списков (списки справочников Клиентов, Контактных лиц и др.) является динамический список.\n\nДля динамических списков указывается основная таблица и выражения полей, в которых можно использовать разыменования, как для поля «Владелец.Клиент» в формах списков Задач и Событий. Также может быть определен порядок сортировки записей (например, сортировка по полю «Дата создания» в формах списков Задач и Событий).\n\nВ форме списка Валют демонстрируются присоединенные таблицы динамического списка. Основная таблица справочника Валют соединяется с виртуальной таблицей среза последних регистра сведений Курсы валют. И для основной и для присоединенной таблиц указываются псевдонимы, которые используются в выражении соединения таблиц и в выражениях полей динамического списка.",
      "Уведомления" : "При создании нового Клиента или Контактного лица пользователь получает оповещение о записи нового объекта с помощью механизма уведомлений. Уведомления создаются в формах этих объектов в обработчиках команды сохранения.\n\nНа эти уведомления добавлена кнопка, при нажатии на которую открывается форма созданного объекта.\n\nПосле закрытия уведомления оно может оставааться в Центре уведомлений, за что отвечает свойство «СохранитьВЦентреУведомлений» объекта уведомления.\n\nУведомления создаются также при загрузке курсов валют, при создании новых Сделок, Задач и Событий и при завершении мероприятий.",
      "Модальные диалоги" : "В модуле формы «Пресейл::СделкиФормаОбъекта» показан пример использования модальных диалоговых окон для подтверждения удаления задач и событий.",
      "Стандартные карточки" : "В качестве главной страницы приложения установлена форма «Основное::ГлавнаяСтраница». На этой форме расположена группа стандартных карточек.\n\nСтандартные карточки имеют предопределенный вид. Для них устанавливаются значения свойств «Заголовок», «Картинка», «Команды».\n\nКарточки на главной странице содержат важную для пользователя информацию и могут вести к разделам приложения.",
      "Стандартная библиотека картинок" : "В компонентах интерфейса проекта используются иконки из стандартной библиотеки картинок. Например, в форме «ЗадачиФормаСписка» используются стандартные иконки «Галочка.svg», «Скачать.svg».",
      "Обучающие подсказки" : "В приложении используется механизм обучающих подсказок, который можно увидеть в форме «Пресейл::СделкиФормаОбъекта». Эти подсказки помогают пользователю ознакомиться с интерфейсом формы Сделки."
    },
    "Синтаксис и концепции языка" : {
      "Объект языка Структура" : "В модуле элемента проекта «Пресейл::ДиаграммаПродажиПоНаправлениям» объявлена структура с именем «ДанныеПродаж», которая объединяет группу полей под именем структуры.\n\nВсе поля этой структуры объявлены с использованием ключевого слова «знч», а значит, состояние объекта структуры не может быть изменено после создания.\n\nДля создания объектов структуры используется автоматически генерируемый конструктор, содержащий все поля в порядке их объявления.\n\nТак как все поля структуры имеют признак обязательности «обз», значения каждого из них должно быть установлено при создании объекта.",
      "Константы" : "В модуле объекта справочника «Общие::КурсыВалют::Валюты» объявлена константа «КОД_БАЗОВОЙ_ВАЛЮТЫ», которая имеет модификатор видимости @ВПроекте и используется в модуле и за его пределами.\n\nВ общем модуле «КурсыВалютСервер» объявлена константа «КЛЮЧ_ЗАДАНИЯ_ЗАГРУЗКИ_КУРСОВ». Она не имеет явных модификаторов видимости и по умолчанию видима только в пределах модуля.",
      "Исключения" : "В общем модуле «Общие::КурсыВалют::КурсыВалютСервер» объявлено исключение с именем «ИсключениеЗагрузкиКурсовВалют».\n\nЭто исключение выбрасывается при перехвате исключений «ИсключениеHttp»,  «ИсключениеЧтенияXml» и при других ошибках загрузки курсов валют. В вызывающем методе «ИсключениеЗагрузкиКурсовВалют» обрабатывается (регистрируется в журнале событий).\n\nК стандартным свойствам исключения добавлено обязательное поле «Валюта». При создании объекта исключения «ИсключениеЗагрузкиКурсовВалют» используется автоматически генерируемый конструктор, принимающий в качестве параметров строковое описание исключения, значение поля «Валюта» и первоначальное исключение-причину.",
      "Составные типы": "Поле «Участник» хранимой структуры «Мероприятия::УчастникиМероприятия» имеет составной тип Сотрудники.Ссылка|КонтактныеЛица.Ссылка|Неопределено",
      "Функциональные типы" : "При создании объектов уведомлений в формах Клиентов и Контактных лиц в качестве обработчиков событий нажатия кнопок действия используются лямбда-выражения.\n\nВ модуле формы «Основное::ГлавнаяСтраница» в методе ПослеСоздания() в параметр процедуры ПодключитьОбработчикТаймера() передается ссылка на метод, расположенный в этом же модуле.",
      "Интерполяция строк" : "Интерполяция строк, т.е. включение в строковой литерал вычисляемых выражений, демонстрируется в методе «ПолучитьЗаголовокДатыМероприятия» модуля формы «Пресейл::СделкиФормаОбъекта».\n\nДля дат в этих литералах установлен формат представления.",
      "Работа с коллекциями" : "В модулях проекта приложения демонстрируются некоторые методы работы с коллекциями, позволяющие выполнять над ними определенные операции в функциональном стиле.\n\nК примеру, в обработчике «ВычислитьРазрешенияДоступаДляОбъектов()» модуля объекта справочника Задачи к массиву объектов применяются операции «Фильтровать» и «Преобразовать».\n\nВ методе «ПолучитьВсе()» модуля менеджера справочника «Валюты» результат запроса преобразуется к массиву одной строкой кода.",
      "Заполнение структур в запросах" : "В методе «ПолучитьКурсВалюты()» модуля «КурсыВалютСервер» в качестве типа строк результата типизированного запроса используется определенная в проекте структура «КурсВалюты». Для этого используется ключевое слово «ЗАПОЛНИТЬ» языка запросов.\n\nВ методе «ПолучитьСтатистикуАктивныхСделок» модуля менеджера справочника «Сделки» структура «СтатистикаСделок» порождается самим запросом. Для этого используется ключевое слово «ПОРОДИТЬ» языка запросов.\n\nВидимость порождаемой структуры соответствует типу, которому принадлежит модуль. Имя типа порождаемой структуры имеет вид «ИмяТипа.ИмяСтруктуры». В данном случае, «Сделки.СтатистикаСделок»."
    },
    "Инструменты интеграции" : {
      "HTTP-сервисы" : "С помощью HTTP-сервиса «Пресейл::СделкиHttpСервис» можно получить данные сделок по HTTP. Для этого определено два шаблона URL и обработчики GET-запросов, соответствующих этим шаблонам.\n\nС помощью запроса по первому адресу можно получить данные всех сделок с отбором по стадии сделки. Значение отбора по стадии передается в параметрах URL. Тело ответа записывается в поток записи по мере получения объектов из базы данных.\n\nС помощью запроса по второму адресу можно получить данные конкретной сделки. Код сделки передается как часть пути к ресурсу. Тело ответа устанавливается из строки.\n\nДля сериализации данных сделок используется глобальный объект «СериализацияJson».",
      "Работа с внешними ресурсами по HTTP" : "В общем модуле «Общие::КурсыВалют::КурсыВалютСервер» демонстрируется использование объекта КлиентHttp для получения данных о курсах валют с сайта ЦБ.\n\nДля создания объекта КлиентHttp с нужными значениями параметров используются фабричные методы «СБазовымUrl()» и «СМаксимумомПеренаправлений()».\n\nС помощью фабричного метода «ЗапросGet()» объекта КлиентHttp создается объект ЗапросHttp. Результатом выполнения запроса является объект ОтветHttp. В модуле демонстрируется обработка тела ответа в формате XML.",
      "Объект СериализацияJson" : "В модуле HTTP-сервиса «Пресейл::СделкиHttpСервис» демонстрируется сериализация объектов соответствий с помощью метода ЗаписатьОбъект() объекта СериализацияJson.",
      "Объект ЧтениеXml" : "В методе ЗагрузитьКурсыВалюты() модуля «Общие::КурсыВалют::КурсыВалютСервер» демонстрируется разбор XML-документа с помощью объекта ЧтениеXml."
    },
    "Системные механизмы" : {
      "Контроль прав доступа" : "Для каждого из справочников приложения, регистра сведений и HTTP-сервиса определены настройки прав доступа.\n\nДля справочников «СтадииСделок» и «Валюты» разрешения вычисляются на уровне всего справочника. Для остальных справочников разрешения вычисляются на уровне всего справочника и на уровне отдельных записей (RLS).\n\nДля управления доступом к справочникам в подсистеме «Основное» создано два ключа доступа: «КлючДоступаРуководителя» и «КлючДоступаМенеджера». Эти ключи выдаются пользователям в соответствии с ролью сотрудника и регионом, которые ему назначены в справочнике «Сотрудники».\n\nВ обработчике «ПослеЗаписи()» объекта справочника «Сотрудники» ключи доступа соответствующего пользователя приложения пересчитываются.\n\nРазрешения доступа для объектов справочника «Контактные лица» зависят от значения реквизита «Регион» справочника «Клиенты», который является владельцем справочника Контактных лиц. При изменении значения Региона у некоторого Клиента нужно явно пересчитывать разрешения доступа тех объектов Контактных лиц, которые связаны с измененным Клиентом. Метод пересчета вызывается в обработчике «ПослеЗаписи()» объекта справочника Клиентов.\n\nДля объектов, разрешения которых, в свою очередь, зависят от Контактных лиц, также по цепочке выполняется пересчет разрешений.\n\nВызов HTTP-сервиса «СделкиHttpСервис» разрешен всем авторизованным пользователям с помощью предопределенного ключа «КлючДоступаДляАутентифицированных».\n\nВ модуле формы «ФормаЗагрузкиКурсовВалют» в методе «ЗагрузитьКурсыВалют()» показан пример дополнения контекста прав пользователя правом на изменение регистра сведений «КурсыВалют».",
      "Запланированные задания" : "Курсы валют в приложении загружаются при помощи запланированного задания. Задание загрузки курсов создается при создании приложения из проекта и выполняется по расписанию. Выполнение задания можно приостановить или возобновить из формы загрузки курсов валют.",
      "Работа с двоичными данными" : "Реквизит «Иконка» справочника Стадии сделок имеет тип ДвоичныйОбъект.Ссылка.\n\nВ форме объекта Стадии сделки демонстрируется загрузка двоичных данных на примере загрузки файла иконки стадии и запись ссылки на загруженный файл в реквизит справочника.\n\nДля загрузки файла используется стандартный менеджер загрузки файлов и компонент интерфейса «ВыборФайлов». После загрузки значение реквизита выводится в колонке формы списка Стадий сделок.\n\nНа форме объекта Стадии сделки выводится гиперссылка, при нажатии на которую происходит выгрузка файла иконки с помощью стандартного менеджера выгрузки файлов.\n\nЗагрузка и выгрузка двоичных данных демонстрируется также в справочнике и в форме объекта Сделки на примере файла договора.",
      "Журнал событий" : "Регистрация событий в Журнале событий демонстрируется в общем модуле «Общие::КурсыВалют::КурсыВалютСервер».\n\nВ подсистеме «Общие::КурсыВалют» добавлено два элемента проекта – События журнала событий: «ОперацияЗагрузкиКурсовВалют» и «ОшибкаЗагрузкиКурсовВалюты». Первое из них записывается при начале и завершении операции загрузки курсов валют, а второе  используется для регистрации ошибок.\n\nСтандартные свойства событий дополнены пользовательскими свойствами, которые используются в шаблонах представления событий.",
      "Консоль запросов" : "Панель навигации приложения включает группу командного интерфейса «Сервис», которая содержит команду вызова консоли запросов.\n\nИсполнение запросов в консоли доступно либо администраторам, либо пользователям, обладающим системным правом «КонсольЗапросов» (проверка выполняется непосредственно при попытке выполнения запроса).\n\nРадел «Сервис» скрыт для пользователей, не являющихся администраторами.",
      "Выгрузка данных в XLS" : "В форме списка Задач продемонстрирована возможность формирования табличного документа и его выгрузки в XLS.\n\nПользователь может выгрузить в файл свои задачи или те, которые он отметил в таблице задач.",
      "Создание пользователей" : "В методе СоздатьПользователя() общего модуля «ПользователиСервер» показан пример программного создания и подключения нового пользователя к приложению.",
      "Локализация" : "Приложение поддерживает русский и английский языки локализации. По умолчанию используется русский язык. Настройки локализации устанавливаются в файле «Проект.yaml».\n\nКаждая из подсистем приложения содержит элемент проекта вида «ЛокализованныеСтроки», в котором приводятся строки на языке по умолчанию, а также каталог «Локализация/En», содержащий файл с переводом этих же строк на английский язык.\n\nДля проверки английской локализации можно открыть приложение, добавив в адресной строке параметр «locale» со значением, соответствующим языку локализации: <URL приложения>?locale=en_EN",
      "Стандартное хранилище настроек" : "В форме «Пресейл::СделкиФормаОбъекта» для сохранения информации о том, что пользователь прошел обучение созданию сделки, используется Стандартное хранилище настроек.",
      "Полнотекстовый поиск" : "Пример использования полнотекстового поиска показан в модуле формы «ОкноПолнотекстовогоПоиска». Эта форма открывается при выполнении команды «Поиск», расположенной в панели действий приложения."
    }
}