@Обработчик
метод ПослеСоздания()
    ЗагружатьКурсыАвтоматически = ЗагрузкаКурсовВалютЗапланирована()
    знч ТекущаяДата = ДатаВремя.Сейчас().Дата
    ПериодЗагрузки = новый ЗакрытыйДиапазон<Дата>(ТекущаяДата, ТекущаяДата) 
;

метод ЗагрузитьПриНажатии(Команда: ОбычнаяКоманда)
    ЗагрузитьКурсыВалют(ПериодЗагрузки.От, ПериодЗагрузки.До)
    
    КурсыВалютЗагружены.Оповестить()
    
    знч Уведомление = новый Уведомление(ЛокализованныеСтроки.ЗагрузкаКурсовВалют(), ЛокализованныеСтроки.КурсыВалютЗагружены())
    Уведомление.ОценкаИнформации = ОценкаИнформации.Положительная
    Уведомление.Показать()
    
    Закрыть()
;

метод ЗагружатьАвтоматическиПриИзменении(Источник: Флажок, Событие: СобытиеПриИзменении<Булево?>)
    если Событие.НовоеЗначение
        ВозобновитьЗагрузкуКурсовВалют()
    иначе
        ПриостановитьЗагрузкуКурсовВалют()
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ЗагрузитьКурсыВалют(НачалоПериода: Дата, КонецПериода: Дата)
    исп КонтекстДоступа.Дополнить(Тип<КурсыВалют.Запись>, [Сущность.Право.Изменение])
    
    КурсыВалютСервер.ЗагрузитьКурсыВалют(НачалоПериода, КонецПериода)
;

@НаСервере @ДоступноСКлиента
статический метод ВозобновитьЗагрузкуКурсовВалют()
    КурсыВалютСервер.ВозобновитьЗагрузкуКурсовВалют()
;

@НаСервере @ДоступноСКлиента
статический метод ПриостановитьЗагрузкуКурсовВалют()
    КурсыВалютСервер.ПриостановитьЗагрузкуКурсовВалют()
;

@НаСервере @ДоступноСКлиента
статический метод ЗагрузкаКурсовВалютЗапланирована(): Булево
    возврат КурсыВалютСервер.ЗагрузкаКурсовВалютЗапланирована()
;